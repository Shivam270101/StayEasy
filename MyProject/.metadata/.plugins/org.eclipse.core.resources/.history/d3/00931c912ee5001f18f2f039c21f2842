package com.stayeasy.controller;

import com.stayeasy.Services.GoogleMapsService;
import com.stayeasy.dto.LocationCoordinates;
import com.stayeasy.entity.Hostel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

@RestController
@RequestMapping("/api/hostels")
public class HostelSearchController {
@Autowired
    private final GoogleMapsService googleMapsService;

    @Autowired
    public HostelSearchController(GoogleMapsService googleMapsService) {
        this.googleMapsService = googleMapsService;
    }

    // Search hostels near the user's current location
    @GetMapping("/nearby")
    public List<Map<String, Object>> searchHostelsNearUser(
            @RequestParam double latitude,
            @RequestParam double longitude,
            @RequestParam(defaultValue = "5") double radiusKm) {  // Default radius is 5 km
        List<Hostel> hostels = googleMapsService.getNearbyHostels(latitude, longitude, radiusKm);
        return hostels.stream()
                .map(hostel -> Map.of(
                        "hostel_id", hostel.getHostel_id(),
                        "Hostelname", hostel.getHostelname(),
                        "location", hostel.getLocation()
                ))
                .collect(Collectors.toList());
    }

    // Search hostels by a specific location (name)
    @GetMapping("/search")
    public List<Map<String, Object>> searchHostelsByLocation(@RequestParam String location) {
        // Get latitude and longitude from the location string using geocoding service
        LocationCoordinates coords = googleMapsService.getCoordinatesFromLocation(location);

        if (coords != null) {
            // Use the coordinates to search for hostels near the given location
            List<Hostel> hostels = googleMapsService.getNearbyHostels(coords.getLatitude(), coords.getLongitude(), 5000);
            System.out.println("Latitude: " + coords.getLatitude() + ", Longitude: " + coords.getLongitude());// 5 km radius
            return hostels.stream()
                    .map(hostel -> Map.of(
                            "hostel_id", hostel.getHostel_id(),
                            "hostel_name", hostel.getHostelname(),
                            "location", hostel.getLocation(),
                            "latitude",hostel.getLocation().getLocation().getY(),
                            "longitude",hostel.getLocation().getLocation().getX()// Or other details you want to return
                    ))
                    .collect(Collectors.toList());
        } else {
            // Handle case where the location could not be found
            return List.of(); // Return an empty list if the location is invalid or not found
        }
    }

}
