package com.stayeasy.Services;



import com.stayeasy.dao.HostelDao;
import com.stayeasy.entity.Hostel;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.util.List;
import java.util.stream.Collectors;

@Service
public class GoogleMapsService {

    @Value("${google.maps.api.key}")
    private String googleApiKey;

    private final HostelDao hostelRepository;
    private final RestTemplate restTemplate;

    public GoogleMapsService(HostelDao hostelRepository, RestTemplate restTemplate) {
        this.hostelRepository = hostelRepository;
        this.restTemplate = restTemplate;
    }

    public List<Hostel> getNearbyHostels(double userLat, double userLng, double radiusKm) {
        List<Hostel> hostels = hostelRepository.findAll();

        return hostels.stream()
                .filter(hostel -> {
                    double distance = calculateDistance(userLat, userLng,
                            hostel.getLocation().getLatitude(), hostel.getLocation().getLongitude());
                    return distance <= radiusKm;
                })
                .collect(Collectors.toList());
    }

    public double calculateDistance(double lat1, double lng1, double lat2, double lng2) {
        String url = String.format("https://maps.googleapis.com/maps/api/distancematrix/json?origins=%f,%f&destinations=%f,%f&key=%s",
                lat1, lng1, lat2, lng2, googleApiKey);

        DistanceMatrixResponse response = restTemplate.getForObject(url, DistanceMatrixResponse.class);
        if (response != null && !response.getRows().isEmpty() && !response.getRows().get(0).getElements().isEmpty()) {
            return response.getRows().get(0).getElements().get(0).getDistance().getValue() / 1000.0;
        }
        return Double.MAX_VALUE;
    }
}


